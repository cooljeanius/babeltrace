## automake Makefile for convenience compat library for libbabeltrace

AM_CFLAGS = $(PACKAGE_CFLAGS) -I$(top_srcdir)/include

## declare some variables to which we will append things later:
noinst_HEADERS =
BUILT_SOURCES =
MOSTLYCLEANFILES = .DS_Store
EXTRA_DIST =
check_PROGRAMS =

## now for some actual stuff:
noinst_LTLIBRARIES = libcompat.la

libcompat_la_SOURCES =

libcompat_la_LDFLAGS =

libcompat_la_LIBADD = $(LIBOBJS) $(ALLOCA)

if BABELTRACE_BUILD_WITH_MINGW
libcompat_la_SOURCES += compat_uuid.c
else
libcompat_la_SOURCES += dummy.c
endif

## TODO: combine all of the gnulib module makefile snippets, so that it
## does NOT just look like this makefile was generated by gnulib-tool

## first start with the alloca.h header:
BUILT_SOURCES += $(ALLOCA_H)
# We need the following in order to create <alloca.h> when the system
# does NOT have one that works with the given compiler.
if GL_GENERATE_ALLOCA_H
alloca.h: alloca.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/alloca.in.h; \
	} > $@-t && \
	mv -fv $@-t $@
else
alloca.h: $(top_builddir)/config.status
	rm -fv $@
endif
MOSTLYCLEANFILES += alloca.h alloca.h-t
EXTRA_DIST += alloca.in.h

## the program to test mktime:
check_PROGRAMS += mktimetest
mktimetest_SOURCES = mktime.c mktime-internal.h
noinst_HEADERS += mktime-internal.h
mktimetest_LDADD = libUnixToOSX.la
mktimetest_CPPFLAGS = -DDEBUG -I.
mktimetest_CFLAGS = $(mktimetest_CPPFLAGS) -Wall -Wextra -Os -ggdb3 -fwrapv

## in case cleaning the tests fails otherwise:
test-clean: clean-checkPROGRAMS
	-rm -fv $(mktimetest_OBJECTS)
	-rm -fv $(check_PROGRAMS)
.PHONY: test-clean
